name: Release and Publish

on:
  push:
    tags:
      - 'v*'  # Triggers on tags like v1.0.0, v2.1.3, etc.

permissions:
  contents: write
  id-token: write  # For PyPI trusted publishing

jobs:
  release-and-publish:
    name: Create Release and Publish to PyPI
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/zoomcutter
    steps:
      # Checkout the repository
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for changelog generation

      # Extract version from tag
      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # Install build dependencies
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      # Build the package
      - name: Build package
        run: python -m build

      # Create the release
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          body: |
            ## What's Changed

            See the [changelog](https://github.com/${{ github.repository }}/compare/${{ github.ref_name }}...${{ github.ref_name }}) for details.

            ## Installation

            ```bash
            pip install zoomcutter==${{ steps.get_version.outputs.VERSION }}
            ```

            Or use with uvx:

            ```bash
            uvx zoomcutter@${{ steps.get_version.outputs.VERSION }}
            ```

      # Publish to PyPI using trusted publishing (OIDC)
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
